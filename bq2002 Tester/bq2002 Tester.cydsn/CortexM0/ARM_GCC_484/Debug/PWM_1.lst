ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_1_Enable,"ax",%progbits
  18              		.align	2
  19              		.global	PWM_1_Enable
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_1_Enable, %function
  23              	PWM_1_Enable:
  24              	.LFB2:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_1.c"
   1:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_1.c **** * File Name: PWM_1.c
   3:.\Generated_Source\PSoC4/PWM_1.c **** * Version 3.30
   4:.\Generated_Source\PSoC4/PWM_1.c **** *
   5:.\Generated_Source\PSoC4/PWM_1.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_1.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC4/PWM_1.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC4/PWM_1.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC4/PWM_1.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC4/PWM_1.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC4/PWM_1.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC4/PWM_1.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC4/PWM_1.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC4/PWM_1.c **** *
  15:.\Generated_Source\PSoC4/PWM_1.c **** * Note:
  16:.\Generated_Source\PSoC4/PWM_1.c **** *
  17:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************
  18:.\Generated_Source\PSoC4/PWM_1.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/PWM_1.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/PWM_1.c **** 
  24:.\Generated_Source\PSoC4/PWM_1.c **** #include "PWM_1.h"
  25:.\Generated_Source\PSoC4/PWM_1.c **** 
  26:.\Generated_Source\PSoC4/PWM_1.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC4/PWM_1.c **** #ifdef PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC4/PWM_1.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC4/PWM_1.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC4/PWM_1.c **** 
  32:.\Generated_Source\PSoC4/PWM_1.c **** uint8 PWM_1_initVar = 0u;
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 2


  33:.\Generated_Source\PSoC4/PWM_1.c **** 
  34:.\Generated_Source\PSoC4/PWM_1.c **** 
  35:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Start
  37:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  38:.\Generated_Source\PSoC4/PWM_1.c **** *
  39:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
  40:.\Generated_Source\PSoC4/PWM_1.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC4/PWM_1.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC4/PWM_1.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC4/PWM_1.c **** *
  44:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
  45:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  46:.\Generated_Source\PSoC4/PWM_1.c **** *
  47:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
  48:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  49:.\Generated_Source\PSoC4/PWM_1.c **** *
  50:.\Generated_Source\PSoC4/PWM_1.c **** * Global variables:
  51:.\Generated_Source\PSoC4/PWM_1.c **** *  PWM_1_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC4/PWM_1.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC4/PWM_1.c **** *
  54:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Start(void) 
  56:.\Generated_Source\PSoC4/PWM_1.c **** {
  57:.\Generated_Source\PSoC4/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC4/PWM_1.c ****     if(PWM_1_initVar == 0u)
  59:.\Generated_Source\PSoC4/PWM_1.c ****     {
  60:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_Init();
  61:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_initVar = 1u;
  62:.\Generated_Source\PSoC4/PWM_1.c ****     }
  63:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_Enable();
  64:.\Generated_Source\PSoC4/PWM_1.c **** 
  65:.\Generated_Source\PSoC4/PWM_1.c **** }
  66:.\Generated_Source\PSoC4/PWM_1.c **** 
  67:.\Generated_Source\PSoC4/PWM_1.c **** 
  68:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Init
  70:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  71:.\Generated_Source\PSoC4/PWM_1.c **** *
  72:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
  73:.\Generated_Source\PSoC4/PWM_1.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC4/PWM_1.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC4/PWM_1.c **** *  PWM_1_Start().
  76:.\Generated_Source\PSoC4/PWM_1.c **** *
  77:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
  78:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  79:.\Generated_Source\PSoC4/PWM_1.c **** *
  80:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
  81:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  82:.\Generated_Source\PSoC4/PWM_1.c **** *
  83:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Init(void) 
  85:.\Generated_Source\PSoC4/PWM_1.c **** {
  86:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
  87:.\Generated_Source\PSoC4/PWM_1.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction || PWM_1_UseControl) */
  89:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 3


  90:.\Generated_Source\PSoC4/PWM_1.c ****     #if(!PWM_1_UsingFixedFunction)
  91:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UseStatus)
  92:.\Generated_Source\PSoC4/PWM_1.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC4/PWM_1.c ****             uint8 PWM_1_interruptState;
  94:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
  95:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
  96:.\Generated_Source\PSoC4/PWM_1.c **** 
  97:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
  98:.\Generated_Source\PSoC4/PWM_1.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CFG0_MODE;
 100:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_DeadBand2_4)
 101:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL |= PWM_1_CFG0_DB;
 102:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_DeadBand2_4) */
 103:.\Generated_Source\PSoC4/PWM_1.c **** 
 104:.\Generated_Source\PSoC4/PWM_1.c ****         ctrl = PWM_1_CONTROL3 & ((uint8 )(~PWM_1_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL3 = ctrl | PWM_1_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC4/PWM_1.c **** 
 107:.\Generated_Source\PSoC4/PWM_1.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_RT1_MASK));
 109:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNC;
 110:.\Generated_Source\PSoC4/PWM_1.c **** 
 111:.\Generated_Source\PSoC4/PWM_1.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNCDSI_EN;
 114:.\Generated_Source\PSoC4/PWM_1.c **** 
 115:.\Generated_Source\PSoC4/PWM_1.c ****     #elif (PWM_1_UseControl)
 116:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC4/PWM_1.c ****         ctrl = PWM_1_CONTROL & ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC4/PWM_1.c ****                 ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL = ctrl | PWM_1_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC4/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 122:.\Generated_Source\PSoC4/PWM_1.c **** 
 123:.\Generated_Source\PSoC4/PWM_1.c ****     #if (!PWM_1_UsingFixedFunction)
 124:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_Resolution == 8)
 125:.\Generated_Source\PSoC4/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC4/PWM_1.c ****         #else /* (PWM_1_Resolution == 16)*/
 128:.\Generated_Source\PSoC4/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_Resolution == 8) */
 132:.\Generated_Source\PSoC4/PWM_1.c **** 
 133:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_INIT_PERIOD_VALUE);
 134:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 135:.\Generated_Source\PSoC4/PWM_1.c **** 
 136:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_WritePeriod(PWM_1_INIT_PERIOD_VALUE);
 137:.\Generated_Source\PSoC4/PWM_1.c **** 
 138:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_UseOneCompareMode)
 139:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 141:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare1(PWM_1_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare2(PWM_1_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseOneCompareMode) */
 144:.\Generated_Source\PSoC4/PWM_1.c **** 
 145:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_KillModeMinTime)
 146:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteKillTime(PWM_1_MinimumKillTime);
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 4


 147:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_KillModeMinTime) */
 148:.\Generated_Source\PSoC4/PWM_1.c **** 
 149:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_DeadBandUsed)
 150:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteDeadTime(PWM_1_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_DeadBandUsed) */
 152:.\Generated_Source\PSoC4/PWM_1.c **** 
 153:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 154:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 156:.\Generated_Source\PSoC4/PWM_1.c **** 
 157:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 158:.\Generated_Source\PSoC4/PWM_1.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL2 |= PWM_1_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 163:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UseStatus)
 164:.\Generated_Source\PSoC4/PWM_1.c **** 
 165:.\Generated_Source\PSoC4/PWM_1.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC4/PWM_1.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC4/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_STATUS_AUX_CTRL |= PWM_1_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC4/PWM_1.c **** 
 171:.\Generated_Source\PSoC4/PWM_1.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC4/PWM_1.c ****             CyExitCriticalSection(PWM_1_interruptState);
 173:.\Generated_Source\PSoC4/PWM_1.c **** 
 174:.\Generated_Source\PSoC4/PWM_1.c ****             /* Clear the FIFO to enable the PWM_1_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC4/PWM_1.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_ClearFIFO();
 177:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 178:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 179:.\Generated_Source\PSoC4/PWM_1.c **** }
 180:.\Generated_Source\PSoC4/PWM_1.c **** 
 181:.\Generated_Source\PSoC4/PWM_1.c **** 
 182:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Enable
 184:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 185:.\Generated_Source\PSoC4/PWM_1.c **** *
 186:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 187:.\Generated_Source\PSoC4/PWM_1.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC4/PWM_1.c **** *
 189:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 190:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 191:.\Generated_Source\PSoC4/PWM_1.c **** *
 192:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 193:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 194:.\Generated_Source\PSoC4/PWM_1.c **** *
 195:.\Generated_Source\PSoC4/PWM_1.c **** * Side Effects:
 196:.\Generated_Source\PSoC4/PWM_1.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC4/PWM_1.c **** *
 198:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Enable(void) 
 200:.\Generated_Source\PSoC4/PWM_1.c **** {
  26              		.loc 1 200 0
  27              		.cfi_startproc
 201:.\Generated_Source\PSoC4/PWM_1.c ****     /* Globally Enable the Fixed Function Block chosen */
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 5


 202:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 203:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE |= PWM_1_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 206:.\Generated_Source\PSoC4/PWM_1.c **** 
 207:.\Generated_Source\PSoC4/PWM_1.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 209:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CTRL_ENABLE;
  28              		.loc 1 209 0
  29 0000 024B     		ldr	r3, .L2
  30 0002 1978     		ldrb	r1, [r3]
  31 0004 8022     		mov	r2, #128
  32 0006 0A43     		orr	r2, r1
  33 0008 1A70     		strb	r2, [r3]
 210:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 211:.\Generated_Source\PSoC4/PWM_1.c **** }
  34              		.loc 1 211 0
  35              		@ sp needed
  36 000a 7047     		bx	lr
  37              	.L3:
  38              		.align	2
  39              	.L2:
  40 000c 73000F40 		.word	1074724979
  41              		.cfi_endproc
  42              	.LFE2:
  43              		.size	PWM_1_Enable, .-PWM_1_Enable
  44              		.section	.text.PWM_1_Stop,"ax",%progbits
  45              		.align	2
  46              		.global	PWM_1_Stop
  47              		.code	16
  48              		.thumb_func
  49              		.type	PWM_1_Stop, %function
  50              	PWM_1_Stop:
  51              	.LFB3:
 212:.\Generated_Source\PSoC4/PWM_1.c **** 
 213:.\Generated_Source\PSoC4/PWM_1.c **** 
 214:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Stop
 216:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 217:.\Generated_Source\PSoC4/PWM_1.c **** *
 218:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 219:.\Generated_Source\PSoC4/PWM_1.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC4/PWM_1.c **** *  interrupts.
 221:.\Generated_Source\PSoC4/PWM_1.c **** *
 222:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 223:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 224:.\Generated_Source\PSoC4/PWM_1.c **** *
 225:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 226:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 227:.\Generated_Source\PSoC4/PWM_1.c **** *
 228:.\Generated_Source\PSoC4/PWM_1.c **** * Side Effects:
 229:.\Generated_Source\PSoC4/PWM_1.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC4/PWM_1.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC4/PWM_1.c **** *
 232:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Stop(void) 
 234:.\Generated_Source\PSoC4/PWM_1.c **** {
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 6


  52              		.loc 1 234 0
  53              		.cfi_startproc
 235:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 236:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_ENABLE));
  54              		.loc 1 236 0
  55 0000 024B     		ldr	r3, .L5
  56 0002 1978     		ldrb	r1, [r3]
  57 0004 7F22     		mov	r2, #127
  58 0006 0A40     		and	r2, r1
  59 0008 1A70     		strb	r2, [r3]
 237:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 238:.\Generated_Source\PSoC4/PWM_1.c **** 
 239:.\Generated_Source\PSoC4/PWM_1.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 241:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE &= ((uint8)(~PWM_1_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_1_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 244:.\Generated_Source\PSoC4/PWM_1.c **** }
  60              		.loc 1 244 0
  61              		@ sp needed
  62 000a 7047     		bx	lr
  63              	.L6:
  64              		.align	2
  65              	.L5:
  66 000c 73000F40 		.word	1074724979
  67              		.cfi_endproc
  68              	.LFE3:
  69              		.size	PWM_1_Stop, .-PWM_1_Stop
  70              		.section	.text.PWM_1_WriteCounter,"ax",%progbits
  71              		.align	2
  72              		.global	PWM_1_WriteCounter
  73              		.code	16
  74              		.thumb_func
  75              		.type	PWM_1_WriteCounter, %function
  76              	PWM_1_WriteCounter:
  77              	.LFB4:
 245:.\Generated_Source\PSoC4/PWM_1.c **** 
 246:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 247:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 248:.\Generated_Source\PSoC4/PWM_1.c **** 
 249:.\Generated_Source\PSoC4/PWM_1.c **** 
 250:.\Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode
 252:.\Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC4/PWM_1.c ****         *
 254:.\Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 255:.\Generated_Source\PSoC4/PWM_1.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC4/PWM_1.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC4/PWM_1.c ****         *
 258:.\Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 259:.\Generated_Source\PSoC4/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC4/PWM_1.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC4/PWM_1.c ****         *
 262:.\Generated_Source\PSoC4/PWM_1.c ****         * Return:
 263:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 264:.\Generated_Source\PSoC4/PWM_1.c ****         *
 265:.\Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 7


 266:.\Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC4/PWM_1.c ****         {
 268:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 269:.\Generated_Source\PSoC4/PWM_1.c **** 
 270:.\Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SH
 272:.\Generated_Source\PSoC4/PWM_1.c ****                 #else
 273:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC4/PWM_1.c **** 
 276:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL3 &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC4/PWM_1.c **** 
 279:.\Generated_Source\PSoC4/PWM_1.c ****             #elif (PWM_1_UseControl)
 280:.\Generated_Source\PSoC4/PWM_1.c **** 
 281:.\Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_S
 283:.\Generated_Source\PSoC4/PWM_1.c ****                                                 PWM_1_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC4/PWM_1.c ****                 #else
 285:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode1masked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC4/PWM_1.c **** 
 288:.\Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_S
 290:.\Generated_Source\PSoC4/PWM_1.c ****                                                PWM_1_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC4/PWM_1.c ****                 #else
 292:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode2masked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC4/PWM_1.c **** 
 295:.\Generated_Source\PSoC4/PWM_1.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~(PWM_1_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC4/PWM_1.c ****                                             PWM_1_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC4/PWM_1.c **** 
 300:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 301:.\Generated_Source\PSoC4/PWM_1.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 303:.\Generated_Source\PSoC4/PWM_1.c ****         }
 304:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 305:.\Generated_Source\PSoC4/PWM_1.c **** 
 306:.\Generated_Source\PSoC4/PWM_1.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC4/PWM_1.c **** 
 308:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 309:.\Generated_Source\PSoC4/PWM_1.c **** 
 310:.\Generated_Source\PSoC4/PWM_1.c **** 
 311:.\Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode1
 313:.\Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC4/PWM_1.c ****         *
 315:.\Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 316:.\Generated_Source\PSoC4/PWM_1.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC4/PWM_1.c ****         *
 318:.\Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 319:.\Generated_Source\PSoC4/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC4/PWM_1.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC4/PWM_1.c ****         *
 322:.\Generated_Source\PSoC4/PWM_1.c ****         * Return:
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 8


 323:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 324:.\Generated_Source\PSoC4/PWM_1.c ****         *
 325:.\Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC4/PWM_1.c ****         {
 328:.\Generated_Source\PSoC4/PWM_1.c ****             #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC4/PWM_1.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SHIFT)
 330:.\Generated_Source\PSoC4/PWM_1.c ****                                            PWM_1_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 332:.\Generated_Source\PSoC4/PWM_1.c ****                 uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC4/PWM_1.c **** 
 335:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1_UseControl)
 336:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UseControl) */
 339:.\Generated_Source\PSoC4/PWM_1.c ****         }
 340:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 341:.\Generated_Source\PSoC4/PWM_1.c **** 
 342:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_CompareMode2SW)
 343:.\Generated_Source\PSoC4/PWM_1.c **** 
 344:.\Generated_Source\PSoC4/PWM_1.c **** 
 345:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_SetCompareMode2
 347:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC4/PWM_1.c ****     *
 349:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 350:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC4/PWM_1.c ****     *
 352:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 353:.\Generated_Source\PSoC4/PWM_1.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC4/PWM_1.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC4/PWM_1.c ****     *
 356:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 357:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 358:.\Generated_Source\PSoC4/PWM_1.c ****     *
 359:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC4/PWM_1.c ****     {
 362:.\Generated_Source\PSoC4/PWM_1.c **** 
 363:.\Generated_Source\PSoC4/PWM_1.c ****         #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC4/PWM_1.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_SHIFT)) &
 365:.\Generated_Source\PSoC4/PWM_1.c ****                                                  PWM_1_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 367:.\Generated_Source\PSoC4/PWM_1.c ****             uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC4/PWM_1.c **** 
 370:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_UseControl)
 371:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseControl) */
 374:.\Generated_Source\PSoC4/PWM_1.c ****     }
 375:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /*PWM_1_CompareMode2SW */
 376:.\Generated_Source\PSoC4/PWM_1.c **** 
 377:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC4/PWM_1.c **** 
 379:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 9


 380:.\Generated_Source\PSoC4/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 381:.\Generated_Source\PSoC4/PWM_1.c **** 
 382:.\Generated_Source\PSoC4/PWM_1.c **** 
 383:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCounter
 385:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC4/PWM_1.c ****     *
 387:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 388:.\Generated_Source\PSoC4/PWM_1.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC4/PWM_1.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC4/PWM_1.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC4/PWM_1.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC4/PWM_1.c ****     *
 393:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 394:.\Generated_Source\PSoC4/PWM_1.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC4/PWM_1.c ****     *
 396:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 397:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 398:.\Generated_Source\PSoC4/PWM_1.c ****     *
 399:.\Generated_Source\PSoC4/PWM_1.c ****     * Side Effects:
 400:.\Generated_Source\PSoC4/PWM_1.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC4/PWM_1.c ****     *
 402:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC4/PWM_1.c ****                                        
 405:.\Generated_Source\PSoC4/PWM_1.c ****     {
  78              		.loc 1 405 0
  79              		.cfi_startproc
  80              	.LVL0:
 406:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG16(PWM_1_COUNTER_LSB_PTR, counter);
  81              		.loc 1 406 0
  82 0000 014B     		ldr	r3, .L8
  83 0002 1880     		strh	r0, [r3]
 407:.\Generated_Source\PSoC4/PWM_1.c ****     }
  84              		.loc 1 407 0
  85              		@ sp needed
  86 0004 7047     		bx	lr
  87              	.L9:
  88 0006 C046     		.align	2
  89              	.L8:
  90 0008 04100F40 		.word	1074728964
  91              		.cfi_endproc
  92              	.LFE4:
  93              		.size	PWM_1_WriteCounter, .-PWM_1_WriteCounter
  94              		.section	.text.PWM_1_ReadCounter,"ax",%progbits
  95              		.align	2
  96              		.global	PWM_1_ReadCounter
  97              		.code	16
  98              		.thumb_func
  99              		.type	PWM_1_ReadCounter, %function
 100              	PWM_1_ReadCounter:
 101              	.LFB5:
 408:.\Generated_Source\PSoC4/PWM_1.c **** 
 409:.\Generated_Source\PSoC4/PWM_1.c **** 
 410:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCounter
 412:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 10


 413:.\Generated_Source\PSoC4/PWM_1.c ****     *
 414:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 415:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC4/PWM_1.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC4/PWM_1.c ****     *
 418:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 419:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 420:.\Generated_Source\PSoC4/PWM_1.c ****     *
 421:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 422:.\Generated_Source\PSoC4/PWM_1.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC4/PWM_1.c ****     *
 424:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCounter(void) 
 426:.\Generated_Source\PSoC4/PWM_1.c ****     {
 102              		.loc 1 426 0
 103              		.cfi_startproc
 427:.\Generated_Source\PSoC4/PWM_1.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC4/PWM_1.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC4/PWM_1.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC4/PWM_1.c ****           (void)CY_GET_REG8(PWM_1_COUNTERCAP_LSB_PTR_8BIT);
 104              		.loc 1 430 0
 105 0000 024B     		ldr	r3, .L11
 106 0002 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC4/PWM_1.c **** 
 432:.\Generated_Source\PSoC4/PWM_1.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_CAPTURE_LSB_PTR));
 107              		.loc 1 433 0
 108 0004 024B     		ldr	r3, .L11+4
 109 0006 1888     		ldrh	r0, [r3]
 110 0008 80B2     		uxth	r0, r0
 434:.\Generated_Source\PSoC4/PWM_1.c ****     }
 111              		.loc 1 434 0
 112              		@ sp needed
 113 000a 7047     		bx	lr
 114              	.L12:
 115              		.align	2
 116              	.L11:
 117 000c 12000F40 		.word	1074724882
 118 0010 A4100F40 		.word	1074729124
 119              		.cfi_endproc
 120              	.LFE5:
 121              		.size	PWM_1_ReadCounter, .-PWM_1_ReadCounter
 122              		.section	.text.PWM_1_WritePeriod,"ax",%progbits
 123              		.align	2
 124              		.global	PWM_1_WritePeriod
 125              		.code	16
 126              		.thumb_func
 127              		.type	PWM_1_WritePeriod, %function
 128              	PWM_1_WritePeriod:
 129              	.LFB6:
 435:.\Generated_Source\PSoC4/PWM_1.c **** 
 436:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseStatus)
 437:.\Generated_Source\PSoC4/PWM_1.c **** 
 438:.\Generated_Source\PSoC4/PWM_1.c **** 
 439:.\Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_ClearFIFO
 441:.\Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 11


 442:.\Generated_Source\PSoC4/PWM_1.c ****         *
 443:.\Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 444:.\Generated_Source\PSoC4/PWM_1.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC4/PWM_1.c ****         *
 446:.\Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 447:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 448:.\Generated_Source\PSoC4/PWM_1.c ****         *
 449:.\Generated_Source\PSoC4/PWM_1.c ****         * Return:
 450:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 451:.\Generated_Source\PSoC4/PWM_1.c ****         *
 452:.\Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_ClearFIFO(void) 
 454:.\Generated_Source\PSoC4/PWM_1.c ****         {
 455:.\Generated_Source\PSoC4/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC4/PWM_1.c ****             {
 457:.\Generated_Source\PSoC4/PWM_1.c ****                 (void)PWM_1_ReadCapture();
 458:.\Generated_Source\PSoC4/PWM_1.c ****             }
 459:.\Generated_Source\PSoC4/PWM_1.c ****         }
 460:.\Generated_Source\PSoC4/PWM_1.c **** 
 461:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_UseStatus */
 462:.\Generated_Source\PSoC4/PWM_1.c **** 
 463:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* !PWM_1_UsingFixedFunction */
 464:.\Generated_Source\PSoC4/PWM_1.c **** 
 465:.\Generated_Source\PSoC4/PWM_1.c **** 
 466:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 468:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 469:.\Generated_Source\PSoC4/PWM_1.c **** *
 470:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 471:.\Generated_Source\PSoC4/PWM_1.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC4/PWM_1.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC4/PWM_1.c **** *
 474:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 475:.\Generated_Source\PSoC4/PWM_1.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC4/PWM_1.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC4/PWM_1.c **** *
 478:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 479:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 480:.\Generated_Source\PSoC4/PWM_1.c **** *
 481:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC4/PWM_1.c **** {
 130              		.loc 1 483 0
 131              		.cfi_startproc
 132              	.LVL1:
 484:.\Generated_Source\PSoC4/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 485:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 487:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, period);
 133              		.loc 1 487 0
 134 0000 014B     		ldr	r3, .L14
 135 0002 1880     		strh	r0, [r3]
 488:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 489:.\Generated_Source\PSoC4/PWM_1.c **** }
 136              		.loc 1 489 0
 137              		@ sp needed
 138 0004 7047     		bx	lr
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 12


 139              	.L15:
 140 0006 C046     		.align	2
 141              	.L14:
 142 0008 84100F40 		.word	1074729092
 143              		.cfi_endproc
 144              	.LFE6:
 145              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
 146              		.section	.text.PWM_1_WriteCompare,"ax",%progbits
 147              		.align	2
 148              		.global	PWM_1_WriteCompare
 149              		.code	16
 150              		.thumb_func
 151              		.type	PWM_1_WriteCompare, %function
 152              	PWM_1_WriteCompare:
 153              	.LFB7:
 490:.\Generated_Source\PSoC4/PWM_1.c **** 
 491:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 492:.\Generated_Source\PSoC4/PWM_1.c **** 
 493:.\Generated_Source\PSoC4/PWM_1.c **** 
 494:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare
 496:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC4/PWM_1.c ****     *
 498:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 499:.\Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC4/PWM_1.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC4/PWM_1.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC4/PWM_1.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC4/PWM_1.c ****     *
 505:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 506:.\Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC4/PWM_1.c ****     *
 508:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 509:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 510:.\Generated_Source\PSoC4/PWM_1.c ****     *
 511:.\Generated_Source\PSoC4/PWM_1.c ****     * Side Effects:
 512:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC4/PWM_1.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC4/PWM_1.c ****     *
 515:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC4/PWM_1.c ****                                        
 518:.\Generated_Source\PSoC4/PWM_1.c ****     {
 154              		.loc 1 518 0
 155              		.cfi_startproc
 156              	.LVL2:
 519:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 520:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 522:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, compare);
 157              		.loc 1 522 0
 158 0000 014B     		ldr	r3, .L17
 159 0002 1880     		strh	r0, [r3]
 523:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 524:.\Generated_Source\PSoC4/PWM_1.c **** 
 525:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_PWMMode == PWM_1__B_PWM__DITHER)
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 13


 526:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 527:.\Generated_Source\PSoC4/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 529:.\Generated_Source\PSoC4/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 531:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_PWMMode == PWM_1__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC4/PWM_1.c ****     }
 160              		.loc 1 532 0
 161              		@ sp needed
 162 0004 7047     		bx	lr
 163              	.L18:
 164 0006 C046     		.align	2
 165              	.L17:
 166 0008 44100F40 		.word	1074729028
 167              		.cfi_endproc
 168              	.LFE7:
 169              		.size	PWM_1_WriteCompare, .-PWM_1_WriteCompare
 170              		.section	.text.PWM_1_Init,"ax",%progbits
 171              		.align	2
 172              		.global	PWM_1_Init
 173              		.code	16
 174              		.thumb_func
 175              		.type	PWM_1_Init, %function
 176              	PWM_1_Init:
 177              	.LFB1:
  85:.\Generated_Source\PSoC4/PWM_1.c **** {
 178              		.loc 1 85 0
 179              		.cfi_startproc
 180 0000 10B5     		push	{r4, lr}
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 4, -8
 183              		.cfi_offset 14, -4
 117:.\Generated_Source\PSoC4/PWM_1.c ****         ctrl = PWM_1_CONTROL & ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)) &
 184              		.loc 1 117 0
 185 0002 0F4B     		ldr	r3, .L20
 186 0004 1A78     		ldrb	r2, [r3]
 187 0006 3F21     		mov	r1, #63
 188 0008 8A43     		bic	r2, r1
 189              	.LVL3:
 119:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL = ctrl | PWM_1_DEFAULT_COMPARE2_MODE |
 190              		.loc 1 119 0
 191 000a 0921     		mov	r1, #9
 192 000c 0A43     		orr	r2, r1
 193              	.LVL4:
 194 000e 1A70     		strb	r2, [r3]
 129:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 195              		.loc 1 129 0
 196 0010 0C4B     		ldr	r3, .L20+4
 197 0012 1978     		ldrb	r1, [r3]
 198 0014 0122     		mov	r2, #1
 199 0016 1143     		orr	r1, r2
 200 0018 C9B2     		uxtb	r1, r1
 201 001a 1970     		strb	r1, [r3]
 130:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 202              		.loc 1 130 0
 203 001c 0A4B     		ldr	r3, .L20+8
 204 001e 1978     		ldrb	r1, [r3]
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 14


 205 0020 0A43     		orr	r2, r1
 206 0022 D2B2     		uxtb	r2, r2
 207 0024 1A70     		strb	r2, [r3]
 133:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_INIT_PERIOD_VALUE);
 208              		.loc 1 133 0
 209 0026 FA24     		mov	r4, #250
 210 0028 A400     		lsl	r4, r4, #2
 211 002a 201C     		mov	r0, r4
 212 002c FFF7FEFF 		bl	PWM_1_WriteCounter
 213              	.LVL5:
 136:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_WritePeriod(PWM_1_INIT_PERIOD_VALUE);
 214              		.loc 1 136 0
 215 0030 201C     		mov	r0, r4
 216 0032 FFF7FEFF 		bl	PWM_1_WritePeriod
 217              	.LVL6:
 139:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_INIT_COMPARE_VALUE1);
 218              		.loc 1 139 0
 219 0036 C820     		mov	r0, #200
 220 0038 FFF7FEFF 		bl	PWM_1_WriteCompare
 221              	.LVL7:
 179:.\Generated_Source\PSoC4/PWM_1.c **** }
 222              		.loc 1 179 0
 223              		@ sp needed
 224 003c 10BD     		pop	{r4, pc}
 225              	.L21:
 226 003e C046     		.align	2
 227              	.L20:
 228 0040 73000F40 		.word	1074724979
 229 0044 92000F40 		.word	1074725010
 230 0048 93000F40 		.word	1074725011
 231              		.cfi_endproc
 232              	.LFE1:
 233              		.size	PWM_1_Init, .-PWM_1_Init
 234              		.section	.text.PWM_1_Start,"ax",%progbits
 235              		.align	2
 236              		.global	PWM_1_Start
 237              		.code	16
 238              		.thumb_func
 239              		.type	PWM_1_Start, %function
 240              	PWM_1_Start:
 241              	.LFB0:
  56:.\Generated_Source\PSoC4/PWM_1.c **** {
 242              		.loc 1 56 0
 243              		.cfi_startproc
 244 0000 08B5     		push	{r3, lr}
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 3, -8
 247              		.cfi_offset 14, -4
  58:.\Generated_Source\PSoC4/PWM_1.c ****     if(PWM_1_initVar == 0u)
 248              		.loc 1 58 0
 249 0002 064B     		ldr	r3, .L24
 250 0004 1B78     		ldrb	r3, [r3]
 251 0006 002B     		cmp	r3, #0
 252 0008 04D1     		bne	.L23
  60:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_Init();
 253              		.loc 1 60 0
 254 000a FFF7FEFF 		bl	PWM_1_Init
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 15


 255              	.LVL8:
  61:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_initVar = 1u;
 256              		.loc 1 61 0
 257 000e 0122     		mov	r2, #1
 258 0010 024B     		ldr	r3, .L24
 259 0012 1A70     		strb	r2, [r3]
 260              	.L23:
  63:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_Enable();
 261              		.loc 1 63 0
 262 0014 FFF7FEFF 		bl	PWM_1_Enable
 263              	.LVL9:
  65:.\Generated_Source\PSoC4/PWM_1.c **** }
 264              		.loc 1 65 0
 265              		@ sp needed
 266 0018 08BD     		pop	{r3, pc}
 267              	.L25:
 268 001a C046     		.align	2
 269              	.L24:
 270 001c 00000000 		.word	.LANCHOR0
 271              		.cfi_endproc
 272              	.LFE0:
 273              		.size	PWM_1_Start, .-PWM_1_Start
 274              		.section	.text.PWM_1_ReadControlRegister,"ax",%progbits
 275              		.align	2
 276              		.global	PWM_1_ReadControlRegister
 277              		.code	16
 278              		.thumb_func
 279              		.type	PWM_1_ReadControlRegister, %function
 280              	PWM_1_ReadControlRegister:
 281              	.LFB8:
 533:.\Generated_Source\PSoC4/PWM_1.c **** 
 534:.\Generated_Source\PSoC4/PWM_1.c **** 
 535:.\Generated_Source\PSoC4/PWM_1.c **** #else
 536:.\Generated_Source\PSoC4/PWM_1.c **** 
 537:.\Generated_Source\PSoC4/PWM_1.c **** 
 538:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare1
 540:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC4/PWM_1.c ****     *
 542:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 543:.\Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC4/PWM_1.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC4/PWM_1.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC4/PWM_1.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC4/PWM_1.c ****     *
 548:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 549:.\Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC4/PWM_1.c ****     *
 551:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 552:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 553:.\Generated_Source\PSoC4/PWM_1.c ****     *
 554:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC4/PWM_1.c ****                                         
 557:.\Generated_Source\PSoC4/PWM_1.c ****     {
 558:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 559:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 16


 560:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 561:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 563:.\Generated_Source\PSoC4/PWM_1.c ****     }
 564:.\Generated_Source\PSoC4/PWM_1.c **** 
 565:.\Generated_Source\PSoC4/PWM_1.c **** 
 566:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare2
 568:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC4/PWM_1.c ****     *
 570:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 571:.\Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC4/PWM_1.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC4/PWM_1.c ****     *  mode.
 576:.\Generated_Source\PSoC4/PWM_1.c ****     *
 577:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 578:.\Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC4/PWM_1.c ****     *
 580:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 581:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 582:.\Generated_Source\PSoC4/PWM_1.c ****     *
 583:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC4/PWM_1.c ****                                         
 586:.\Generated_Source\PSoC4/PWM_1.c ****     {
 587:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 588:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 590:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 592:.\Generated_Source\PSoC4/PWM_1.c ****     }
 593:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC4/PWM_1.c **** 
 595:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_DeadBandUsed)
 596:.\Generated_Source\PSoC4/PWM_1.c **** 
 597:.\Generated_Source\PSoC4/PWM_1.c **** 
 598:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteDeadTime
 600:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC4/PWM_1.c ****     *
 602:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 603:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC4/PWM_1.c ****     *
 605:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 606:.\Generated_Source\PSoC4/PWM_1.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC4/PWM_1.c ****     *
 608:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 609:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 610:.\Generated_Source\PSoC4/PWM_1.c ****     *
 611:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC4/PWM_1.c ****     {
 614:.\Generated_Source\PSoC4/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC4/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 616:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG8(PWM_1_DEADBAND_COUNT_PTR, deadtime);
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 17


 617:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 618:.\Generated_Source\PSoC4/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC4/PWM_1.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_DEADBAND_COUNT &= ((uint8)(~PWM_1_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC4/PWM_1.c **** 
 622:.\Generated_Source\PSoC4/PWM_1.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_1_DEADBAND_COUNT_SHIFT)) &
 625:.\Generated_Source\PSoC4/PWM_1.c ****                                                     PWM_1_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 627:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= deadtime & PWM_1_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC4/PWM_1.c **** 
 630:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 631:.\Generated_Source\PSoC4/PWM_1.c ****     }
 632:.\Generated_Source\PSoC4/PWM_1.c **** 
 633:.\Generated_Source\PSoC4/PWM_1.c **** 
 634:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadDeadTime
 636:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC4/PWM_1.c ****     *
 638:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 639:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC4/PWM_1.c ****     *
 641:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 642:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 643:.\Generated_Source\PSoC4/PWM_1.c ****     *
 644:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 645:.\Generated_Source\PSoC4/PWM_1.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC4/PWM_1.c ****     *
 647:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC4/PWM_1.c ****     {
 650:.\Generated_Source\PSoC4/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC4/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 652:.\Generated_Source\PSoC4/PWM_1.c ****             return (CY_GET_REG8(PWM_1_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 654:.\Generated_Source\PSoC4/PWM_1.c **** 
 655:.\Generated_Source\PSoC4/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC4/PWM_1.c ****                 return ((uint8)(((uint8)(PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC4/PWM_1.c ****                                                                            PWM_1_DEADBAND_COUNT_SHI
 659:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 660:.\Generated_Source\PSoC4/PWM_1.c ****                 return (PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 663:.\Generated_Source\PSoC4/PWM_1.c ****     }
 664:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC4/PWM_1.c **** 
 666:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 667:.\Generated_Source\PSoC4/PWM_1.c **** 
 668:.\Generated_Source\PSoC4/PWM_1.c **** 
 669:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_SetInterruptMode
 671:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC4/PWM_1.c ****     *
 673:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 18


 674:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC4/PWM_1.c ****     *  source status register.
 676:.\Generated_Source\PSoC4/PWM_1.c ****     *
 677:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC4/PWM_1.c ****     *
 680:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 681:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 682:.\Generated_Source\PSoC4/PWM_1.c ****     *
 683:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC4/PWM_1.c ****     {
 686:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG8(PWM_1_STATUS_MASK_PTR, interruptMode);
 687:.\Generated_Source\PSoC4/PWM_1.c ****     }
 688:.\Generated_Source\PSoC4/PWM_1.c **** 
 689:.\Generated_Source\PSoC4/PWM_1.c **** 
 690:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadStatusRegister
 692:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC4/PWM_1.c ****     *
 694:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 695:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC4/PWM_1.c ****     *
 697:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 698:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 699:.\Generated_Source\PSoC4/PWM_1.c ****     *
 700:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 701:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC4/PWM_1.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC4/PWM_1.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC4/PWM_1.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC4/PWM_1.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC4/PWM_1.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC4/PWM_1.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC4/PWM_1.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC4/PWM_1.c ****     *
 710:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC4/PWM_1.c ****     {
 713:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG8(PWM_1_STATUS_PTR));
 714:.\Generated_Source\PSoC4/PWM_1.c ****     }
 715:.\Generated_Source\PSoC4/PWM_1.c **** 
 716:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 717:.\Generated_Source\PSoC4/PWM_1.c **** 
 718:.\Generated_Source\PSoC4/PWM_1.c **** 
 719:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseControl)
 720:.\Generated_Source\PSoC4/PWM_1.c **** 
 721:.\Generated_Source\PSoC4/PWM_1.c **** 
 722:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadControlRegister
 724:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC4/PWM_1.c ****     *
 726:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 727:.\Generated_Source\PSoC4/PWM_1.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC4/PWM_1.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC4/PWM_1.c ****     *
 730:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 19


 731:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 732:.\Generated_Source\PSoC4/PWM_1.c ****     *
 733:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 734:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC4/PWM_1.c ****     *
 736:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC4/PWM_1.c ****     {
 282              		.loc 1 738 0
 283              		.cfi_startproc
 739:.\Generated_Source\PSoC4/PWM_1.c ****         uint8 result;
 740:.\Generated_Source\PSoC4/PWM_1.c **** 
 741:.\Generated_Source\PSoC4/PWM_1.c ****         result = CY_GET_REG8(PWM_1_CONTROL_PTR);
 284              		.loc 1 741 0
 285 0000 014B     		ldr	r3, .L27
 286 0002 1878     		ldrb	r0, [r3]
 287 0004 C0B2     		uxtb	r0, r0
 288              	.LVL10:
 742:.\Generated_Source\PSoC4/PWM_1.c ****         return (result);
 743:.\Generated_Source\PSoC4/PWM_1.c ****     }
 289              		.loc 1 743 0
 290              		@ sp needed
 291 0006 7047     		bx	lr
 292              	.L28:
 293              		.align	2
 294              	.L27:
 295 0008 73000F40 		.word	1074724979
 296              		.cfi_endproc
 297              	.LFE8:
 298              		.size	PWM_1_ReadControlRegister, .-PWM_1_ReadControlRegister
 299              		.section	.text.PWM_1_WriteControlRegister,"ax",%progbits
 300              		.align	2
 301              		.global	PWM_1_WriteControlRegister
 302              		.code	16
 303              		.thumb_func
 304              		.type	PWM_1_WriteControlRegister, %function
 305              	PWM_1_WriteControlRegister:
 306              	.LFB9:
 744:.\Generated_Source\PSoC4/PWM_1.c **** 
 745:.\Generated_Source\PSoC4/PWM_1.c **** 
 746:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteControlRegister
 748:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM_1.c ****     *
 750:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 751:.\Generated_Source\PSoC4/PWM_1.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC4/PWM_1.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC4/PWM_1.c ****     *
 754:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 755:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC4/PWM_1.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC4/PWM_1.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC4/PWM_1.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC4/PWM_1.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC4/PWM_1.c ****     *
 761:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 762:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 20


 763:.\Generated_Source\PSoC4/PWM_1.c ****     *
 764:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC4/PWM_1.c ****     {
 307              		.loc 1 766 0
 308              		.cfi_startproc
 309              	.LVL11:
 767:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG8(PWM_1_CONTROL_PTR, control);
 310              		.loc 1 767 0
 311 0000 014B     		ldr	r3, .L30
 312 0002 1870     		strb	r0, [r3]
 768:.\Generated_Source\PSoC4/PWM_1.c ****     }
 313              		.loc 1 768 0
 314              		@ sp needed
 315 0004 7047     		bx	lr
 316              	.L31:
 317 0006 C046     		.align	2
 318              	.L30:
 319 0008 73000F40 		.word	1074724979
 320              		.cfi_endproc
 321              	.LFE9:
 322              		.size	PWM_1_WriteControlRegister, .-PWM_1_WriteControlRegister
 323              		.section	.text.PWM_1_ReadCapture,"ax",%progbits
 324              		.align	2
 325              		.global	PWM_1_ReadCapture
 326              		.code	16
 327              		.thumb_func
 328              		.type	PWM_1_ReadCapture, %function
 329              	PWM_1_ReadCapture:
 330              	.LFB10:
 769:.\Generated_Source\PSoC4/PWM_1.c **** 
 770:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseControl) */
 771:.\Generated_Source\PSoC4/PWM_1.c **** 
 772:.\Generated_Source\PSoC4/PWM_1.c **** 
 773:.\Generated_Source\PSoC4/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 774:.\Generated_Source\PSoC4/PWM_1.c **** 
 775:.\Generated_Source\PSoC4/PWM_1.c **** 
 776:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCapture
 778:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC4/PWM_1.c ****     *
 780:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 781:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC4/PWM_1.c ****     *
 783:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 784:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 785:.\Generated_Source\PSoC4/PWM_1.c ****     *
 786:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 787:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC4/PWM_1.c ****     *
 789:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCapture(void) 
 791:.\Generated_Source\PSoC4/PWM_1.c ****     {
 331              		.loc 1 791 0
 332              		.cfi_startproc
 792:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_CAPTURE_LSB_PTR));
 333              		.loc 1 792 0
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 21


 334 0000 014B     		ldr	r3, .L33
 335 0002 1888     		ldrh	r0, [r3]
 336 0004 80B2     		uxth	r0, r0
 793:.\Generated_Source\PSoC4/PWM_1.c ****     }
 337              		.loc 1 793 0
 338              		@ sp needed
 339 0006 7047     		bx	lr
 340              	.L34:
 341              		.align	2
 342              	.L33:
 343 0008 A4100F40 		.word	1074729124
 344              		.cfi_endproc
 345              	.LFE10:
 346              		.size	PWM_1_ReadCapture, .-PWM_1_ReadCapture
 347              		.section	.text.PWM_1_ReadCompare,"ax",%progbits
 348              		.align	2
 349              		.global	PWM_1_ReadCompare
 350              		.code	16
 351              		.thumb_func
 352              		.type	PWM_1_ReadCompare, %function
 353              	PWM_1_ReadCompare:
 354              	.LFB11:
 794:.\Generated_Source\PSoC4/PWM_1.c **** 
 795:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (!PWM_1_UsingFixedFunction) */
 796:.\Generated_Source\PSoC4/PWM_1.c **** 
 797:.\Generated_Source\PSoC4/PWM_1.c **** 
 798:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 799:.\Generated_Source\PSoC4/PWM_1.c **** 
 800:.\Generated_Source\PSoC4/PWM_1.c **** 
 801:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare
 803:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC4/PWM_1.c ****     *
 805:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 806:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC4/PWM_1.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC4/PWM_1.c ****     *
 809:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 810:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 811:.\Generated_Source\PSoC4/PWM_1.c ****     *
 812:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 813:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC4/PWM_1.c ****     *
 815:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCompare(void) 
 817:.\Generated_Source\PSoC4/PWM_1.c ****     {
 355              		.loc 1 817 0
 356              		.cfi_startproc
 818:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 819:.\Generated_Source\PSoC4/PWM_1.c ****             return ((uint16)CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 821:.\Generated_Source\PSoC4/PWM_1.c ****             return (CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 357              		.loc 1 821 0
 358 0000 014B     		ldr	r3, .L36
 359 0002 1888     		ldrh	r0, [r3]
 360 0004 80B2     		uxth	r0, r0
 822:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 22


 823:.\Generated_Source\PSoC4/PWM_1.c ****     }
 361              		.loc 1 823 0
 362              		@ sp needed
 363 0006 7047     		bx	lr
 364              	.L37:
 365              		.align	2
 366              	.L36:
 367 0008 44100F40 		.word	1074729028
 368              		.cfi_endproc
 369              	.LFE11:
 370              		.size	PWM_1_ReadCompare, .-PWM_1_ReadCompare
 371              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 372              		.align	2
 373              		.global	PWM_1_ReadPeriod
 374              		.code	16
 375              		.thumb_func
 376              		.type	PWM_1_ReadPeriod, %function
 377              	PWM_1_ReadPeriod:
 378              	.LFB12:
 824:.\Generated_Source\PSoC4/PWM_1.c **** 
 825:.\Generated_Source\PSoC4/PWM_1.c **** #else
 826:.\Generated_Source\PSoC4/PWM_1.c **** 
 827:.\Generated_Source\PSoC4/PWM_1.c **** 
 828:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare1
 830:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC4/PWM_1.c ****     *
 832:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 833:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC4/PWM_1.c ****     *
 835:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 836:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 837:.\Generated_Source\PSoC4/PWM_1.c ****     *
 838:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 839:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC4/PWM_1.c ****     *
 841:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCompare1(void) 
 843:.\Generated_Source\PSoC4/PWM_1.c ****     {
 844:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC4/PWM_1.c ****     }
 846:.\Generated_Source\PSoC4/PWM_1.c **** 
 847:.\Generated_Source\PSoC4/PWM_1.c **** 
 848:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare2
 850:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC4/PWM_1.c ****     *
 852:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 853:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC4/PWM_1.c ****     *
 855:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 856:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 857:.\Generated_Source\PSoC4/PWM_1.c ****     *
 858:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 859:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC4/PWM_1.c ****     *
 861:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 23


 862:.\Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCompare2(void) 
 863:.\Generated_Source\PSoC4/PWM_1.c ****     {
 864:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_COMPARE2_LSB_PTR));
 865:.\Generated_Source\PSoC4/PWM_1.c ****     }
 866:.\Generated_Source\PSoC4/PWM_1.c **** 
 867:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseOneCompareMode) */
 868:.\Generated_Source\PSoC4/PWM_1.c **** 
 869:.\Generated_Source\PSoC4/PWM_1.c **** 
 870:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 872:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 873:.\Generated_Source\PSoC4/PWM_1.c **** *
 874:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 875:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC4/PWM_1.c **** *
 877:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 878:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 879:.\Generated_Source\PSoC4/PWM_1.c **** *
 880:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 881:.\Generated_Source\PSoC4/PWM_1.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC4/PWM_1.c **** *
 883:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/PWM_1.c **** uint16 PWM_1_ReadPeriod(void) 
 885:.\Generated_Source\PSoC4/PWM_1.c **** {
 379              		.loc 1 885 0
 380              		.cfi_startproc
 886:.\Generated_Source\PSoC4/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 887:.\Generated_Source\PSoC4/PWM_1.c ****         return ((uint16)CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 889:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 381              		.loc 1 889 0
 382 0000 014B     		ldr	r3, .L39
 383 0002 1888     		ldrh	r0, [r3]
 384 0004 80B2     		uxth	r0, r0
 890:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 891:.\Generated_Source\PSoC4/PWM_1.c **** }
 385              		.loc 1 891 0
 386              		@ sp needed
 387 0006 7047     		bx	lr
 388              	.L40:
 389              		.align	2
 390              	.L39:
 391 0008 84100F40 		.word	1074729092
 392              		.cfi_endproc
 393              	.LFE12:
 394              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 395              		.global	PWM_1_initVar
 396              		.bss
 397              		.set	.LANCHOR0,. + 0
 398              		.type	PWM_1_initVar, %object
 399              		.size	PWM_1_initVar, 1
 400              	PWM_1_initVar:
 401 0000 00       		.space	1
 402              		.text
 403              	.Letext0:
 404              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 405              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 24


 406              	.Ldebug_info0:
 407 0000 89020000 		.4byte	0x289
 408 0004 0400     		.2byte	0x4
 409 0006 00000000 		.4byte	.Ldebug_abbrev0
 410 000a 04       		.byte	0x4
 411 000b 01       		.uleb128 0x1
 412 000c 5B010000 		.4byte	.LASF35
 413 0010 01       		.byte	0x1
 414 0011 4D020000 		.4byte	.LASF36
 415 0015 26000000 		.4byte	.LASF37
 416 0019 00000000 		.4byte	.Ldebug_ranges0+0
 417 001d 00000000 		.4byte	0
 418 0021 00000000 		.4byte	.Ldebug_line0
 419 0025 02       		.uleb128 0x2
 420 0026 01       		.byte	0x1
 421 0027 06       		.byte	0x6
 422 0028 99020000 		.4byte	.LASF0
 423 002c 02       		.uleb128 0x2
 424 002d 01       		.byte	0x1
 425 002e 08       		.byte	0x8
 426 002f 97000000 		.4byte	.LASF1
 427 0033 02       		.uleb128 0x2
 428 0034 02       		.byte	0x2
 429 0035 05       		.byte	0x5
 430 0036 02010000 		.4byte	.LASF2
 431 003a 02       		.uleb128 0x2
 432 003b 02       		.byte	0x2
 433 003c 07       		.byte	0x7
 434 003d 76000000 		.4byte	.LASF3
 435 0041 02       		.uleb128 0x2
 436 0042 04       		.byte	0x4
 437 0043 05       		.byte	0x5
 438 0044 8B020000 		.4byte	.LASF4
 439 0048 02       		.uleb128 0x2
 440 0049 04       		.byte	0x4
 441 004a 07       		.byte	0x7
 442 004b BB000000 		.4byte	.LASF5
 443 004f 02       		.uleb128 0x2
 444 0050 08       		.byte	0x8
 445 0051 05       		.byte	0x5
 446 0052 F8010000 		.4byte	.LASF6
 447 0056 02       		.uleb128 0x2
 448 0057 08       		.byte	0x8
 449 0058 07       		.byte	0x7
 450 0059 3D010000 		.4byte	.LASF7
 451 005d 03       		.uleb128 0x3
 452 005e 04       		.byte	0x4
 453 005f 05       		.byte	0x5
 454 0060 696E7400 		.ascii	"int\000"
 455 0064 02       		.uleb128 0x2
 456 0065 04       		.byte	0x4
 457 0066 07       		.byte	0x7
 458 0067 30010000 		.4byte	.LASF8
 459 006b 04       		.uleb128 0x4
 460 006c CD000000 		.4byte	.LASF9
 461 0070 02       		.byte	0x2
 462 0071 B3       		.byte	0xb3
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 25


 463 0072 2C000000 		.4byte	0x2c
 464 0076 04       		.uleb128 0x4
 465 0077 1E010000 		.4byte	.LASF10
 466 007b 02       		.byte	0x2
 467 007c B4       		.byte	0xb4
 468 007d 3A000000 		.4byte	0x3a
 469 0081 02       		.uleb128 0x2
 470 0082 04       		.byte	0x4
 471 0083 04       		.byte	0x4
 472 0084 89000000 		.4byte	.LASF11
 473 0088 02       		.uleb128 0x2
 474 0089 08       		.byte	0x8
 475 008a 04       		.byte	0x4
 476 008b ED000000 		.4byte	.LASF12
 477 008f 02       		.uleb128 0x2
 478 0090 01       		.byte	0x1
 479 0091 08       		.byte	0x8
 480 0092 94020000 		.4byte	.LASF13
 481 0096 05       		.uleb128 0x5
 482 0097 A5000000 		.4byte	.LASF14
 483 009b 02       		.byte	0x2
 484 009c 5D01     		.2byte	0x15d
 485 009e A2000000 		.4byte	0xa2
 486 00a2 06       		.uleb128 0x6
 487 00a3 6B000000 		.4byte	0x6b
 488 00a7 05       		.uleb128 0x5
 489 00a8 00000000 		.4byte	.LASF15
 490 00ac 02       		.byte	0x2
 491 00ad 5E01     		.2byte	0x15e
 492 00af B3000000 		.4byte	0xb3
 493 00b3 06       		.uleb128 0x6
 494 00b4 76000000 		.4byte	0x76
 495 00b8 02       		.uleb128 0x2
 496 00b9 04       		.byte	0x4
 497 00ba 07       		.byte	0x7
 498 00bb DC010000 		.4byte	.LASF16
 499 00bf 07       		.uleb128 0x7
 500 00c0 06000000 		.4byte	.LASF17
 501 00c4 01       		.byte	0x1
 502 00c5 C7       		.byte	0xc7
 503 00c6 00000000 		.4byte	.LFB2
 504 00ca 10000000 		.4byte	.LFE2-.LFB2
 505 00ce 01       		.uleb128 0x1
 506 00cf 9C       		.byte	0x9c
 507 00d0 07       		.uleb128 0x7
 508 00d1 80020000 		.4byte	.LASF18
 509 00d5 01       		.byte	0x1
 510 00d6 E9       		.byte	0xe9
 511 00d7 00000000 		.4byte	.LFB3
 512 00db 10000000 		.4byte	.LFE3-.LFB3
 513 00df 01       		.uleb128 0x1
 514 00e0 9C       		.byte	0x9c
 515 00e1 08       		.uleb128 0x8
 516 00e2 13000000 		.4byte	.LASF19
 517 00e6 01       		.byte	0x1
 518 00e7 9301     		.2byte	0x193
 519 00e9 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 26


 520 00ed 0C000000 		.4byte	.LFE4-.LFB4
 521 00f1 01       		.uleb128 0x1
 522 00f2 9C       		.byte	0x9c
 523 00f3 06010000 		.4byte	0x106
 524 00f7 09       		.uleb128 0x9
 525 00f8 8F000000 		.4byte	.LASF21
 526 00fc 01       		.byte	0x1
 527 00fd 9301     		.2byte	0x193
 528 00ff 76000000 		.4byte	0x76
 529 0103 01       		.uleb128 0x1
 530 0104 50       		.byte	0x50
 531 0105 00       		.byte	0
 532 0106 0A       		.uleb128 0xa
 533 0107 6E020000 		.4byte	.LASF31
 534 010b 01       		.byte	0x1
 535 010c A901     		.2byte	0x1a9
 536 010e 76000000 		.4byte	0x76
 537 0112 00000000 		.4byte	.LFB5
 538 0116 14000000 		.4byte	.LFE5-.LFB5
 539 011a 01       		.uleb128 0x1
 540 011b 9C       		.byte	0x9c
 541 011c 08       		.uleb128 0x8
 542 011d 3B020000 		.4byte	.LASF20
 543 0121 01       		.byte	0x1
 544 0122 E201     		.2byte	0x1e2
 545 0124 00000000 		.4byte	.LFB6
 546 0128 0C000000 		.4byte	.LFE6-.LFB6
 547 012c 01       		.uleb128 0x1
 548 012d 9C       		.byte	0x9c
 549 012e 41010000 		.4byte	0x141
 550 0132 09       		.uleb128 0x9
 551 0133 6F000000 		.4byte	.LASF22
 552 0137 01       		.byte	0x1
 553 0138 E201     		.2byte	0x1e2
 554 013a 76000000 		.4byte	0x76
 555 013e 01       		.uleb128 0x1
 556 013f 50       		.byte	0x50
 557 0140 00       		.byte	0
 558 0141 08       		.uleb128 0x8
 559 0142 E5010000 		.4byte	.LASF23
 560 0146 01       		.byte	0x1
 561 0147 0402     		.2byte	0x204
 562 0149 00000000 		.4byte	.LFB7
 563 014d 0C000000 		.4byte	.LFE7-.LFB7
 564 0151 01       		.uleb128 0x1
 565 0152 9C       		.byte	0x9c
 566 0153 66010000 		.4byte	0x166
 567 0157 09       		.uleb128 0x9
 568 0158 A5020000 		.4byte	.LASF24
 569 015c 01       		.byte	0x1
 570 015d 0402     		.2byte	0x204
 571 015f 76000000 		.4byte	0x76
 572 0163 01       		.uleb128 0x1
 573 0164 50       		.byte	0x50
 574 0165 00       		.byte	0
 575 0166 0B       		.uleb128 0xb
 576 0167 25010000 		.4byte	.LASF25
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 27


 577 016b 01       		.byte	0x1
 578 016c 54       		.byte	0x54
 579 016d 00000000 		.4byte	.LFB1
 580 0171 4C000000 		.4byte	.LFE1-.LFB1
 581 0175 01       		.uleb128 0x1
 582 0176 9C       		.byte	0x9c
 583 0177 C3010000 		.4byte	0x1c3
 584 017b 0C       		.uleb128 0xc
 585 017c D7010000 		.4byte	.LASF27
 586 0180 01       		.byte	0x1
 587 0181 57       		.byte	0x57
 588 0182 6B000000 		.4byte	0x6b
 589 0186 00000000 		.4byte	.LLST0
 590 018a 0D       		.uleb128 0xd
 591 018b 30000000 		.4byte	.LVL5
 592 018f E1000000 		.4byte	0xe1
 593 0193 9E010000 		.4byte	0x19e
 594 0197 0E       		.uleb128 0xe
 595 0198 01       		.uleb128 0x1
 596 0199 50       		.byte	0x50
 597 019a 02       		.uleb128 0x2
 598 019b 74       		.byte	0x74
 599 019c 00       		.sleb128 0
 600 019d 00       		.byte	0
 601 019e 0D       		.uleb128 0xd
 602 019f 36000000 		.4byte	.LVL6
 603 01a3 1C010000 		.4byte	0x11c
 604 01a7 B2010000 		.4byte	0x1b2
 605 01ab 0E       		.uleb128 0xe
 606 01ac 01       		.uleb128 0x1
 607 01ad 50       		.byte	0x50
 608 01ae 02       		.uleb128 0x2
 609 01af 74       		.byte	0x74
 610 01b0 00       		.sleb128 0
 611 01b1 00       		.byte	0
 612 01b2 0F       		.uleb128 0xf
 613 01b3 3C000000 		.4byte	.LVL7
 614 01b7 41010000 		.4byte	0x141
 615 01bb 0E       		.uleb128 0xe
 616 01bc 01       		.uleb128 0x1
 617 01bd 50       		.byte	0x50
 618 01be 02       		.uleb128 0x2
 619 01bf 08       		.byte	0x8
 620 01c0 C8       		.byte	0xc8
 621 01c1 00       		.byte	0
 622 01c2 00       		.byte	0
 623 01c3 0B       		.uleb128 0xb
 624 01c4 AD020000 		.4byte	.LASF26
 625 01c8 01       		.byte	0x1
 626 01c9 37       		.byte	0x37
 627 01ca 00000000 		.4byte	.LFB0
 628 01ce 20000000 		.4byte	.LFE0-.LFB0
 629 01d2 01       		.uleb128 0x1
 630 01d3 9C       		.byte	0x9c
 631 01d4 EB010000 		.4byte	0x1eb
 632 01d8 10       		.uleb128 0x10
 633 01d9 0E000000 		.4byte	.LVL8
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 28


 634 01dd 66010000 		.4byte	0x166
 635 01e1 10       		.uleb128 0x10
 636 01e2 18000000 		.4byte	.LVL9
 637 01e6 BF000000 		.4byte	0xbf
 638 01ea 00       		.byte	0
 639 01eb 11       		.uleb128 0x11
 640 01ec 06020000 		.4byte	.LASF38
 641 01f0 01       		.byte	0x1
 642 01f1 E102     		.2byte	0x2e1
 643 01f3 6B000000 		.4byte	0x6b
 644 01f7 00000000 		.4byte	.LFB8
 645 01fb 0C000000 		.4byte	.LFE8-.LFB8
 646 01ff 01       		.uleb128 0x1
 647 0200 9C       		.byte	0x9c
 648 0201 14020000 		.4byte	0x214
 649 0205 12       		.uleb128 0x12
 650 0206 54010000 		.4byte	.LASF28
 651 020a 01       		.byte	0x1
 652 020b E302     		.2byte	0x2e3
 653 020d 6B000000 		.4byte	0x6b
 654 0211 01       		.uleb128 0x1
 655 0212 50       		.byte	0x50
 656 0213 00       		.byte	0
 657 0214 08       		.uleb128 0x8
 658 0215 20020000 		.4byte	.LASF29
 659 0219 01       		.byte	0x1
 660 021a FD02     		.2byte	0x2fd
 661 021c 00000000 		.4byte	.LFB9
 662 0220 0C000000 		.4byte	.LFE9-.LFB9
 663 0224 01       		.uleb128 0x1
 664 0225 9C       		.byte	0x9c
 665 0226 39020000 		.4byte	0x239
 666 022a 09       		.uleb128 0x9
 667 022b D3000000 		.4byte	.LASF30
 668 022f 01       		.byte	0x1
 669 0230 FD02     		.2byte	0x2fd
 670 0232 6B000000 		.4byte	0x6b
 671 0236 01       		.uleb128 0x1
 672 0237 50       		.byte	0x50
 673 0238 00       		.byte	0
 674 0239 0A       		.uleb128 0xa
 675 023a 0C010000 		.4byte	.LASF32
 676 023e 01       		.byte	0x1
 677 023f 1603     		.2byte	0x316
 678 0241 76000000 		.4byte	0x76
 679 0245 00000000 		.4byte	.LFB10
 680 0249 0C000000 		.4byte	.LFE10-.LFB10
 681 024d 01       		.uleb128 0x1
 682 024e 9C       		.byte	0x9c
 683 024f 0A       		.uleb128 0xa
 684 0250 DB000000 		.4byte	.LASF33
 685 0254 01       		.byte	0x1
 686 0255 3003     		.2byte	0x330
 687 0257 76000000 		.4byte	0x76
 688 025b 00000000 		.4byte	.LFB11
 689 025f 0C000000 		.4byte	.LFE11-.LFB11
 690 0263 01       		.uleb128 0x1
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 29


 691 0264 9C       		.byte	0x9c
 692 0265 0A       		.uleb128 0xa
 693 0266 AA000000 		.4byte	.LASF34
 694 026a 01       		.byte	0x1
 695 026b 7403     		.2byte	0x374
 696 026d 76000000 		.4byte	0x76
 697 0271 00000000 		.4byte	.LFB12
 698 0275 0C000000 		.4byte	.LFE12-.LFB12
 699 0279 01       		.uleb128 0x1
 700 027a 9C       		.byte	0x9c
 701 027b 13       		.uleb128 0x13
 702 027c F4000000 		.4byte	.LASF39
 703 0280 01       		.byte	0x1
 704 0281 20       		.byte	0x20
 705 0282 6B000000 		.4byte	0x6b
 706 0286 05       		.uleb128 0x5
 707 0287 03       		.byte	0x3
 708 0288 00000000 		.4byte	PWM_1_initVar
 709 028c 00       		.byte	0
 710              		.section	.debug_abbrev,"",%progbits
 711              	.Ldebug_abbrev0:
 712 0000 01       		.uleb128 0x1
 713 0001 11       		.uleb128 0x11
 714 0002 01       		.byte	0x1
 715 0003 25       		.uleb128 0x25
 716 0004 0E       		.uleb128 0xe
 717 0005 13       		.uleb128 0x13
 718 0006 0B       		.uleb128 0xb
 719 0007 03       		.uleb128 0x3
 720 0008 0E       		.uleb128 0xe
 721 0009 1B       		.uleb128 0x1b
 722 000a 0E       		.uleb128 0xe
 723 000b 55       		.uleb128 0x55
 724 000c 17       		.uleb128 0x17
 725 000d 11       		.uleb128 0x11
 726 000e 01       		.uleb128 0x1
 727 000f 10       		.uleb128 0x10
 728 0010 17       		.uleb128 0x17
 729 0011 00       		.byte	0
 730 0012 00       		.byte	0
 731 0013 02       		.uleb128 0x2
 732 0014 24       		.uleb128 0x24
 733 0015 00       		.byte	0
 734 0016 0B       		.uleb128 0xb
 735 0017 0B       		.uleb128 0xb
 736 0018 3E       		.uleb128 0x3e
 737 0019 0B       		.uleb128 0xb
 738 001a 03       		.uleb128 0x3
 739 001b 0E       		.uleb128 0xe
 740 001c 00       		.byte	0
 741 001d 00       		.byte	0
 742 001e 03       		.uleb128 0x3
 743 001f 24       		.uleb128 0x24
 744 0020 00       		.byte	0
 745 0021 0B       		.uleb128 0xb
 746 0022 0B       		.uleb128 0xb
 747 0023 3E       		.uleb128 0x3e
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 30


 748 0024 0B       		.uleb128 0xb
 749 0025 03       		.uleb128 0x3
 750 0026 08       		.uleb128 0x8
 751 0027 00       		.byte	0
 752 0028 00       		.byte	0
 753 0029 04       		.uleb128 0x4
 754 002a 16       		.uleb128 0x16
 755 002b 00       		.byte	0
 756 002c 03       		.uleb128 0x3
 757 002d 0E       		.uleb128 0xe
 758 002e 3A       		.uleb128 0x3a
 759 002f 0B       		.uleb128 0xb
 760 0030 3B       		.uleb128 0x3b
 761 0031 0B       		.uleb128 0xb
 762 0032 49       		.uleb128 0x49
 763 0033 13       		.uleb128 0x13
 764 0034 00       		.byte	0
 765 0035 00       		.byte	0
 766 0036 05       		.uleb128 0x5
 767 0037 16       		.uleb128 0x16
 768 0038 00       		.byte	0
 769 0039 03       		.uleb128 0x3
 770 003a 0E       		.uleb128 0xe
 771 003b 3A       		.uleb128 0x3a
 772 003c 0B       		.uleb128 0xb
 773 003d 3B       		.uleb128 0x3b
 774 003e 05       		.uleb128 0x5
 775 003f 49       		.uleb128 0x49
 776 0040 13       		.uleb128 0x13
 777 0041 00       		.byte	0
 778 0042 00       		.byte	0
 779 0043 06       		.uleb128 0x6
 780 0044 35       		.uleb128 0x35
 781 0045 00       		.byte	0
 782 0046 49       		.uleb128 0x49
 783 0047 13       		.uleb128 0x13
 784 0048 00       		.byte	0
 785 0049 00       		.byte	0
 786 004a 07       		.uleb128 0x7
 787 004b 2E       		.uleb128 0x2e
 788 004c 00       		.byte	0
 789 004d 3F       		.uleb128 0x3f
 790 004e 19       		.uleb128 0x19
 791 004f 03       		.uleb128 0x3
 792 0050 0E       		.uleb128 0xe
 793 0051 3A       		.uleb128 0x3a
 794 0052 0B       		.uleb128 0xb
 795 0053 3B       		.uleb128 0x3b
 796 0054 0B       		.uleb128 0xb
 797 0055 27       		.uleb128 0x27
 798 0056 19       		.uleb128 0x19
 799 0057 11       		.uleb128 0x11
 800 0058 01       		.uleb128 0x1
 801 0059 12       		.uleb128 0x12
 802 005a 06       		.uleb128 0x6
 803 005b 40       		.uleb128 0x40
 804 005c 18       		.uleb128 0x18
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 31


 805 005d 9742     		.uleb128 0x2117
 806 005f 19       		.uleb128 0x19
 807 0060 00       		.byte	0
 808 0061 00       		.byte	0
 809 0062 08       		.uleb128 0x8
 810 0063 2E       		.uleb128 0x2e
 811 0064 01       		.byte	0x1
 812 0065 3F       		.uleb128 0x3f
 813 0066 19       		.uleb128 0x19
 814 0067 03       		.uleb128 0x3
 815 0068 0E       		.uleb128 0xe
 816 0069 3A       		.uleb128 0x3a
 817 006a 0B       		.uleb128 0xb
 818 006b 3B       		.uleb128 0x3b
 819 006c 05       		.uleb128 0x5
 820 006d 27       		.uleb128 0x27
 821 006e 19       		.uleb128 0x19
 822 006f 11       		.uleb128 0x11
 823 0070 01       		.uleb128 0x1
 824 0071 12       		.uleb128 0x12
 825 0072 06       		.uleb128 0x6
 826 0073 40       		.uleb128 0x40
 827 0074 18       		.uleb128 0x18
 828 0075 9742     		.uleb128 0x2117
 829 0077 19       		.uleb128 0x19
 830 0078 01       		.uleb128 0x1
 831 0079 13       		.uleb128 0x13
 832 007a 00       		.byte	0
 833 007b 00       		.byte	0
 834 007c 09       		.uleb128 0x9
 835 007d 05       		.uleb128 0x5
 836 007e 00       		.byte	0
 837 007f 03       		.uleb128 0x3
 838 0080 0E       		.uleb128 0xe
 839 0081 3A       		.uleb128 0x3a
 840 0082 0B       		.uleb128 0xb
 841 0083 3B       		.uleb128 0x3b
 842 0084 05       		.uleb128 0x5
 843 0085 49       		.uleb128 0x49
 844 0086 13       		.uleb128 0x13
 845 0087 02       		.uleb128 0x2
 846 0088 18       		.uleb128 0x18
 847 0089 00       		.byte	0
 848 008a 00       		.byte	0
 849 008b 0A       		.uleb128 0xa
 850 008c 2E       		.uleb128 0x2e
 851 008d 00       		.byte	0
 852 008e 3F       		.uleb128 0x3f
 853 008f 19       		.uleb128 0x19
 854 0090 03       		.uleb128 0x3
 855 0091 0E       		.uleb128 0xe
 856 0092 3A       		.uleb128 0x3a
 857 0093 0B       		.uleb128 0xb
 858 0094 3B       		.uleb128 0x3b
 859 0095 05       		.uleb128 0x5
 860 0096 27       		.uleb128 0x27
 861 0097 19       		.uleb128 0x19
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 32


 862 0098 49       		.uleb128 0x49
 863 0099 13       		.uleb128 0x13
 864 009a 11       		.uleb128 0x11
 865 009b 01       		.uleb128 0x1
 866 009c 12       		.uleb128 0x12
 867 009d 06       		.uleb128 0x6
 868 009e 40       		.uleb128 0x40
 869 009f 18       		.uleb128 0x18
 870 00a0 9742     		.uleb128 0x2117
 871 00a2 19       		.uleb128 0x19
 872 00a3 00       		.byte	0
 873 00a4 00       		.byte	0
 874 00a5 0B       		.uleb128 0xb
 875 00a6 2E       		.uleb128 0x2e
 876 00a7 01       		.byte	0x1
 877 00a8 3F       		.uleb128 0x3f
 878 00a9 19       		.uleb128 0x19
 879 00aa 03       		.uleb128 0x3
 880 00ab 0E       		.uleb128 0xe
 881 00ac 3A       		.uleb128 0x3a
 882 00ad 0B       		.uleb128 0xb
 883 00ae 3B       		.uleb128 0x3b
 884 00af 0B       		.uleb128 0xb
 885 00b0 27       		.uleb128 0x27
 886 00b1 19       		.uleb128 0x19
 887 00b2 11       		.uleb128 0x11
 888 00b3 01       		.uleb128 0x1
 889 00b4 12       		.uleb128 0x12
 890 00b5 06       		.uleb128 0x6
 891 00b6 40       		.uleb128 0x40
 892 00b7 18       		.uleb128 0x18
 893 00b8 9742     		.uleb128 0x2117
 894 00ba 19       		.uleb128 0x19
 895 00bb 01       		.uleb128 0x1
 896 00bc 13       		.uleb128 0x13
 897 00bd 00       		.byte	0
 898 00be 00       		.byte	0
 899 00bf 0C       		.uleb128 0xc
 900 00c0 34       		.uleb128 0x34
 901 00c1 00       		.byte	0
 902 00c2 03       		.uleb128 0x3
 903 00c3 0E       		.uleb128 0xe
 904 00c4 3A       		.uleb128 0x3a
 905 00c5 0B       		.uleb128 0xb
 906 00c6 3B       		.uleb128 0x3b
 907 00c7 0B       		.uleb128 0xb
 908 00c8 49       		.uleb128 0x49
 909 00c9 13       		.uleb128 0x13
 910 00ca 02       		.uleb128 0x2
 911 00cb 17       		.uleb128 0x17
 912 00cc 00       		.byte	0
 913 00cd 00       		.byte	0
 914 00ce 0D       		.uleb128 0xd
 915 00cf 898201   		.uleb128 0x4109
 916 00d2 01       		.byte	0x1
 917 00d3 11       		.uleb128 0x11
 918 00d4 01       		.uleb128 0x1
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 33


 919 00d5 31       		.uleb128 0x31
 920 00d6 13       		.uleb128 0x13
 921 00d7 01       		.uleb128 0x1
 922 00d8 13       		.uleb128 0x13
 923 00d9 00       		.byte	0
 924 00da 00       		.byte	0
 925 00db 0E       		.uleb128 0xe
 926 00dc 8A8201   		.uleb128 0x410a
 927 00df 00       		.byte	0
 928 00e0 02       		.uleb128 0x2
 929 00e1 18       		.uleb128 0x18
 930 00e2 9142     		.uleb128 0x2111
 931 00e4 18       		.uleb128 0x18
 932 00e5 00       		.byte	0
 933 00e6 00       		.byte	0
 934 00e7 0F       		.uleb128 0xf
 935 00e8 898201   		.uleb128 0x4109
 936 00eb 01       		.byte	0x1
 937 00ec 11       		.uleb128 0x11
 938 00ed 01       		.uleb128 0x1
 939 00ee 31       		.uleb128 0x31
 940 00ef 13       		.uleb128 0x13
 941 00f0 00       		.byte	0
 942 00f1 00       		.byte	0
 943 00f2 10       		.uleb128 0x10
 944 00f3 898201   		.uleb128 0x4109
 945 00f6 00       		.byte	0
 946 00f7 11       		.uleb128 0x11
 947 00f8 01       		.uleb128 0x1
 948 00f9 31       		.uleb128 0x31
 949 00fa 13       		.uleb128 0x13
 950 00fb 00       		.byte	0
 951 00fc 00       		.byte	0
 952 00fd 11       		.uleb128 0x11
 953 00fe 2E       		.uleb128 0x2e
 954 00ff 01       		.byte	0x1
 955 0100 3F       		.uleb128 0x3f
 956 0101 19       		.uleb128 0x19
 957 0102 03       		.uleb128 0x3
 958 0103 0E       		.uleb128 0xe
 959 0104 3A       		.uleb128 0x3a
 960 0105 0B       		.uleb128 0xb
 961 0106 3B       		.uleb128 0x3b
 962 0107 05       		.uleb128 0x5
 963 0108 27       		.uleb128 0x27
 964 0109 19       		.uleb128 0x19
 965 010a 49       		.uleb128 0x49
 966 010b 13       		.uleb128 0x13
 967 010c 11       		.uleb128 0x11
 968 010d 01       		.uleb128 0x1
 969 010e 12       		.uleb128 0x12
 970 010f 06       		.uleb128 0x6
 971 0110 40       		.uleb128 0x40
 972 0111 18       		.uleb128 0x18
 973 0112 9742     		.uleb128 0x2117
 974 0114 19       		.uleb128 0x19
 975 0115 01       		.uleb128 0x1
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 34


 976 0116 13       		.uleb128 0x13
 977 0117 00       		.byte	0
 978 0118 00       		.byte	0
 979 0119 12       		.uleb128 0x12
 980 011a 34       		.uleb128 0x34
 981 011b 00       		.byte	0
 982 011c 03       		.uleb128 0x3
 983 011d 0E       		.uleb128 0xe
 984 011e 3A       		.uleb128 0x3a
 985 011f 0B       		.uleb128 0xb
 986 0120 3B       		.uleb128 0x3b
 987 0121 05       		.uleb128 0x5
 988 0122 49       		.uleb128 0x49
 989 0123 13       		.uleb128 0x13
 990 0124 02       		.uleb128 0x2
 991 0125 18       		.uleb128 0x18
 992 0126 00       		.byte	0
 993 0127 00       		.byte	0
 994 0128 13       		.uleb128 0x13
 995 0129 34       		.uleb128 0x34
 996 012a 00       		.byte	0
 997 012b 03       		.uleb128 0x3
 998 012c 0E       		.uleb128 0xe
 999 012d 3A       		.uleb128 0x3a
 1000 012e 0B       		.uleb128 0xb
 1001 012f 3B       		.uleb128 0x3b
 1002 0130 0B       		.uleb128 0xb
 1003 0131 49       		.uleb128 0x49
 1004 0132 13       		.uleb128 0x13
 1005 0133 3F       		.uleb128 0x3f
 1006 0134 19       		.uleb128 0x19
 1007 0135 02       		.uleb128 0x2
 1008 0136 18       		.uleb128 0x18
 1009 0137 00       		.byte	0
 1010 0138 00       		.byte	0
 1011 0139 00       		.byte	0
 1012              		.section	.debug_loc,"",%progbits
 1013              	.Ldebug_loc0:
 1014              	.LLST0:
 1015 0000 0A000000 		.4byte	.LVL3
 1016 0004 0E000000 		.4byte	.LVL4
 1017 0008 0100     		.2byte	0x1
 1018 000a 52       		.byte	0x52
 1019 000b 00000000 		.4byte	0
 1020 000f 00000000 		.4byte	0
 1021              		.section	.debug_aranges,"",%progbits
 1022 0000 7C000000 		.4byte	0x7c
 1023 0004 0200     		.2byte	0x2
 1024 0006 00000000 		.4byte	.Ldebug_info0
 1025 000a 04       		.byte	0x4
 1026 000b 00       		.byte	0
 1027 000c 0000     		.2byte	0
 1028 000e 0000     		.2byte	0
 1029 0010 00000000 		.4byte	.LFB2
 1030 0014 10000000 		.4byte	.LFE2-.LFB2
 1031 0018 00000000 		.4byte	.LFB3
 1032 001c 10000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 35


 1033 0020 00000000 		.4byte	.LFB4
 1034 0024 0C000000 		.4byte	.LFE4-.LFB4
 1035 0028 00000000 		.4byte	.LFB5
 1036 002c 14000000 		.4byte	.LFE5-.LFB5
 1037 0030 00000000 		.4byte	.LFB6
 1038 0034 0C000000 		.4byte	.LFE6-.LFB6
 1039 0038 00000000 		.4byte	.LFB7
 1040 003c 0C000000 		.4byte	.LFE7-.LFB7
 1041 0040 00000000 		.4byte	.LFB1
 1042 0044 4C000000 		.4byte	.LFE1-.LFB1
 1043 0048 00000000 		.4byte	.LFB0
 1044 004c 20000000 		.4byte	.LFE0-.LFB0
 1045 0050 00000000 		.4byte	.LFB8
 1046 0054 0C000000 		.4byte	.LFE8-.LFB8
 1047 0058 00000000 		.4byte	.LFB9
 1048 005c 0C000000 		.4byte	.LFE9-.LFB9
 1049 0060 00000000 		.4byte	.LFB10
 1050 0064 0C000000 		.4byte	.LFE10-.LFB10
 1051 0068 00000000 		.4byte	.LFB11
 1052 006c 0C000000 		.4byte	.LFE11-.LFB11
 1053 0070 00000000 		.4byte	.LFB12
 1054 0074 0C000000 		.4byte	.LFE12-.LFB12
 1055 0078 00000000 		.4byte	0
 1056 007c 00000000 		.4byte	0
 1057              		.section	.debug_ranges,"",%progbits
 1058              	.Ldebug_ranges0:
 1059 0000 00000000 		.4byte	.LFB2
 1060 0004 10000000 		.4byte	.LFE2
 1061 0008 00000000 		.4byte	.LFB3
 1062 000c 10000000 		.4byte	.LFE3
 1063 0010 00000000 		.4byte	.LFB4
 1064 0014 0C000000 		.4byte	.LFE4
 1065 0018 00000000 		.4byte	.LFB5
 1066 001c 14000000 		.4byte	.LFE5
 1067 0020 00000000 		.4byte	.LFB6
 1068 0024 0C000000 		.4byte	.LFE6
 1069 0028 00000000 		.4byte	.LFB7
 1070 002c 0C000000 		.4byte	.LFE7
 1071 0030 00000000 		.4byte	.LFB1
 1072 0034 4C000000 		.4byte	.LFE1
 1073 0038 00000000 		.4byte	.LFB0
 1074 003c 20000000 		.4byte	.LFE0
 1075 0040 00000000 		.4byte	.LFB8
 1076 0044 0C000000 		.4byte	.LFE8
 1077 0048 00000000 		.4byte	.LFB9
 1078 004c 0C000000 		.4byte	.LFE9
 1079 0050 00000000 		.4byte	.LFB10
 1080 0054 0C000000 		.4byte	.LFE10
 1081 0058 00000000 		.4byte	.LFB11
 1082 005c 0C000000 		.4byte	.LFE11
 1083 0060 00000000 		.4byte	.LFB12
 1084 0064 0C000000 		.4byte	.LFE12
 1085 0068 00000000 		.4byte	0
 1086 006c 00000000 		.4byte	0
 1087              		.section	.debug_line,"",%progbits
 1088              	.Ldebug_line0:
 1089 0000 47010000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 36


 1089      02004400 
 1089      00000201 
 1089      FB0E0D00 
 1089      01010101 
 1090              	.LASF15:
 1091 0000 72656731 		.ascii	"reg16\000"
 1091      3600
 1092              	.LASF17:
 1093 0006 50574D5F 		.ascii	"PWM_1_Enable\000"
 1093      315F456E 
 1093      61626C65 
 1093      00
 1094              	.LASF19:
 1095 0013 50574D5F 		.ascii	"PWM_1_WriteCounter\000"
 1095      315F5772 
 1095      69746543 
 1095      6F756E74 
 1095      657200
 1096              	.LASF37:
 1097 0026 453A5C44 		.ascii	"E:\\Documents\\GitHub\\bq2002-chip-tester\\bq2002 T"
 1097      6F63756D 
 1097      656E7473 
 1097      5C476974 
 1097      4875625C 
 1098 0055 65737465 		.ascii	"ester\\bq2002 Tester.cydsn\000"
 1098      725C6271 
 1098      32303032 
 1098      20546573 
 1098      7465722E 
 1099              	.LASF22:
 1100 006f 70657269 		.ascii	"period\000"
 1100      6F6400
 1101              	.LASF3:
 1102 0076 73686F72 		.ascii	"short unsigned int\000"
 1102      7420756E 
 1102      7369676E 
 1102      65642069 
 1102      6E7400
 1103              	.LASF11:
 1104 0089 666C6F61 		.ascii	"float\000"
 1104      7400
 1105              	.LASF21:
 1106 008f 636F756E 		.ascii	"counter\000"
 1106      74657200 
 1107              	.LASF1:
 1108 0097 756E7369 		.ascii	"unsigned char\000"
 1108      676E6564 
 1108      20636861 
 1108      7200
 1109              	.LASF14:
 1110 00a5 72656738 		.ascii	"reg8\000"
 1110      00
 1111              	.LASF34:
 1112 00aa 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 1112      315F5265 
 1112      61645065 
 1112      72696F64 
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 37


 1112      00
 1113              	.LASF5:
 1114 00bb 6C6F6E67 		.ascii	"long unsigned int\000"
 1114      20756E73 
 1114      69676E65 
 1114      6420696E 
 1114      7400
 1115              	.LASF9:
 1116 00cd 75696E74 		.ascii	"uint8\000"
 1116      3800
 1117              	.LASF30:
 1118 00d3 636F6E74 		.ascii	"control\000"
 1118      726F6C00 
 1119              	.LASF33:
 1120 00db 50574D5F 		.ascii	"PWM_1_ReadCompare\000"
 1120      315F5265 
 1120      6164436F 
 1120      6D706172 
 1120      6500
 1121              	.LASF12:
 1122 00ed 646F7562 		.ascii	"double\000"
 1122      6C6500
 1123              	.LASF39:
 1124 00f4 50574D5F 		.ascii	"PWM_1_initVar\000"
 1124      315F696E 
 1124      69745661 
 1124      7200
 1125              	.LASF2:
 1126 0102 73686F72 		.ascii	"short int\000"
 1126      7420696E 
 1126      7400
 1127              	.LASF32:
 1128 010c 50574D5F 		.ascii	"PWM_1_ReadCapture\000"
 1128      315F5265 
 1128      61644361 
 1128      70747572 
 1128      6500
 1129              	.LASF10:
 1130 011e 75696E74 		.ascii	"uint16\000"
 1130      313600
 1131              	.LASF25:
 1132 0125 50574D5F 		.ascii	"PWM_1_Init\000"
 1132      315F496E 
 1132      697400
 1133              	.LASF8:
 1134 0130 756E7369 		.ascii	"unsigned int\000"
 1134      676E6564 
 1134      20696E74 
 1134      00
 1135              	.LASF7:
 1136 013d 6C6F6E67 		.ascii	"long long unsigned int\000"
 1136      206C6F6E 
 1136      6720756E 
 1136      7369676E 
 1136      65642069 
 1137              	.LASF28:
 1138 0154 72657375 		.ascii	"result\000"
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 38


 1138      6C7400
 1139              	.LASF35:
 1140 015b 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1140      4320342E 
 1140      382E3420 
 1140      32303134 
 1140      30353236 
 1141 018e 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 1141      20726576 
 1141      6973696F 
 1141      6E203231 
 1141      31333538 
 1142 01c1 67202D66 		.ascii	"g -ffunction-sections\000"
 1142      66756E63 
 1142      74696F6E 
 1142      2D736563 
 1142      74696F6E 
 1143              	.LASF27:
 1144 01d7 6374726C 		.ascii	"ctrl\000"
 1144      00
 1145              	.LASF16:
 1146 01dc 73697A65 		.ascii	"sizetype\000"
 1146      74797065 
 1146      00
 1147              	.LASF23:
 1148 01e5 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 1148      315F5772 
 1148      69746543 
 1148      6F6D7061 
 1148      726500
 1149              	.LASF6:
 1150 01f8 6C6F6E67 		.ascii	"long long int\000"
 1150      206C6F6E 
 1150      6720696E 
 1150      7400
 1151              	.LASF38:
 1152 0206 50574D5F 		.ascii	"PWM_1_ReadControlRegister\000"
 1152      315F5265 
 1152      6164436F 
 1152      6E74726F 
 1152      6C526567 
 1153              	.LASF29:
 1154 0220 50574D5F 		.ascii	"PWM_1_WriteControlRegister\000"
 1154      315F5772 
 1154      69746543 
 1154      6F6E7472 
 1154      6F6C5265 
 1155              	.LASF20:
 1156 023b 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 1156      315F5772 
 1156      69746550 
 1156      6572696F 
 1156      6400
 1157              	.LASF36:
 1158 024d 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_1.c\000"
 1158      6E657261 
 1158      7465645F 
ARM GAS  C:\Users\Moses\AppData\Local\Temp\cc5CghGJ.s 			page 39


 1158      536F7572 
 1158      63655C50 
 1159              	.LASF31:
 1160 026e 50574D5F 		.ascii	"PWM_1_ReadCounter\000"
 1160      315F5265 
 1160      6164436F 
 1160      756E7465 
 1160      7200
 1161              	.LASF18:
 1162 0280 50574D5F 		.ascii	"PWM_1_Stop\000"
 1162      315F5374 
 1162      6F7000
 1163              	.LASF4:
 1164 028b 6C6F6E67 		.ascii	"long int\000"
 1164      20696E74 
 1164      00
 1165              	.LASF13:
 1166 0294 63686172 		.ascii	"char\000"
 1166      00
 1167              	.LASF0:
 1168 0299 7369676E 		.ascii	"signed char\000"
 1168      65642063 
 1168      68617200 
 1169              	.LASF24:
 1170 02a5 636F6D70 		.ascii	"compare\000"
 1170      61726500 
 1171              	.LASF26:
 1172 02ad 50574D5F 		.ascii	"PWM_1_Start\000"
 1172      315F5374 
 1172      61727400 
 1173              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
